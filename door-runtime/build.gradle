plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'kotlinx-atomicfu'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.android.library'
    id 'maven-publish'
}

group rootProject.group
version rootProject.version

repositories {
    mavenCentral()
}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    sourceSets.main.manifest.srcFile('src/androidMain/AndroidManifest.xml')
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
}

kotlin {
    android {
        publishLibraryVariants("release", "debug")
    }

    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        testRuns["test"].executionTask.configure {
            useJUnit()
        }
    }

    js(LEGACY) {
        browser {
            testTask {
                useKarma {
                    useChromeHeadless()
                    webpackConfig.cssSupport.enabled = true
                }
            }
        }
    }
    /* Targets configuration omitted. 
    *  To find out how to configure the targets, please follow the link:
    *  https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#setting-up-targets */

    sourceSets {
        commonMain {
            dependencies {
                compileOnly project(":room-annotations")
                implementation kotlin('stdlib-common')
                implementation "io.ktor:ktor-client-core:$version_ktor"
                implementation "io.ktor:ktor-client-json:$version_ktor"
                implementation "io.github.aakira:napier:$version_napier"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$version_kotlinx_serialization"
                implementation "org.kodein.di:kodein-di:$version_kodein_di"

            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        roomAnnotations {

        }

        commonJvmMain {
            dependencies {
                compileOnly "org.nanohttpd:nanohttpd:$version_nanohttpd"
                compileOnly "org.nanohttpd:nanohttpd-nanolets:$version_nanohttpd"
            }
        }

        androidMain {
            dependsOn commonJvmMain
            dependencies {
                implementation project(":door-room-jdbc")
                implementation "androidx.room:room-runtime:$version_android_room"
                implementation "androidx.room:room-ktx:$version_android_room"
                implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_androidx_lifecycle"
                implementation "androidx.paging:paging-runtime:$version_androidx_paging"
                implementation "androidx.core:core-ktx:$version_androidx_core"
                implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
                implementation "com.squareup.okhttp3:okhttp-sse:$version_okhttp"
            }
        }

        androidTest {

        }

        commonJvmJs {
            dependsOn commonMain

            dependencies {
                implementation kotlin('stdlib-common')
            }
        }


        jvmMain {
            dependsOn roomAnnotations
            dependsOn commonJvmMain
            dependsOn commonJvmJs

            dependencies {
                implementation project(":room-annotations")
                implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$version_kodein_di"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "org.postgresql:postgresql:$version_postgres_jdbc"
                implementation "io.ktor:ktor-server-core:$version_ktor"
                implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
                implementation "com.squareup.okhttp3:okhttp-sse:$version_okhttp"
                implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test-junit')

                implementation "org.mockito.kotlin:mockito-kotlin:$version_kotlin_mockito"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "com.squareup.okhttp3:mockwebserver:$version_mockwebserver"

                implementation "io.ktor:ktor-server-core:$version_ktor"
                implementation "io.ktor:ktor-server-netty:$version_ktor"
                implementation "io.ktor:ktor-jackson:$version_ktor"
                implementation "io.ktor:ktor-gson:$version_ktor"
                implementation "io.ktor:ktor-client-okhttp:$version_ktor"
                implementation "io.ktor:ktor-client-gson:$version_ktor"
                implementation "io.ktor:ktor-server-test-host:$version_ktor"
            }
        }
        jsMain {
            dependsOn roomAnnotations
            dependsOn commonJvmJs
            dependencies {
                implementation "org.jetbrains.kotlin-wrappers:kotlin-extensions:$version_kotlin_extensions"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

publishing {
    repositories {
        maven {
            url rootProject.ext.localProperties["repo.dir"]
        }
    }
}