package wrappers

import com.ustadmobile.door.jdbc.*
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.launch
import kotlin.Array
import kotlin.js.json

class SQLiteConnectionJs(val datasource: SQLiteDatasourceJs):Connection {

    private var closed = false

    override fun setAutoCommit(commit: Boolean) {

    }

    override fun getAutoCommit(): Boolean {
        return true
    }

    override fun prepareStatement(sql: String): PreparedStatement {
        return SQLitePreparedStatementJs(this, sql)
    }

    override fun prepareStatement(sql: String, autoGeneratedKeys: Int): PreparedStatement {
        return SQLitePreparedStatementJs(this, sql, autoGeneratedKeys)
    }

    override fun createStatement(): Statement {
        TODO("Not yet implemented")
    }

    override fun commit() {}

    override fun close() {
        closed = true
//        GlobalScope.launch {
//            datasource.sendMessage(json("action" to "close"))
//        }
    }

    override fun isClosed() = closed

    override fun createArrayOf(arrayType: String, objects: Array<out Any?>): com.ustadmobile.door.jdbc.Array {
        throw SQLException("Array not supported on SQLite")
    }

    override fun getMetaData(): DatabaseMetadata {
        TODO("Not yet implemented")
    }


}