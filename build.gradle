
buildscript {

    ext.kotlin_version = "1.9.0"
    ext.atomicfu_version = '0.22.0'
    ext.version_shadow = "8.1.1"
    ext.ksp_version = "1.0.13"

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

}

plugins {
    id 'com.android.application' version '8.0.1' apply false
    id 'com.android.library' version '8.0.1' apply false
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version" apply false
    id 'org.jetbrains.kotlin.plugin.atomicfu' version "$kotlin_version" apply false
    id "com.github.ben-manes.versions" version "0.47.0"
    id "com.google.devtools.ksp" version "$kotlin_version-$ksp_version" apply false
}


group 'com.github.UstadMobile.door'
version '0.0.63o10'

ext.localProperties = new Properties()

//Defaults
ext.localProperties["door.postgresUrl"] = ""
ext.localProperties["door.postgresUser"] = ""
ext.localProperties["door.postgresPass"] = ""

if(project.file("local.properties").exists()) {
    ext.localProperties.load(new FileInputStream(project.file("local.properties")))
}

if(System.getenv("DOOR_POSTGRES_URL") != null) {
    ext.localProperties["door.postgresUrl"] = System.getenv("DOOR_POSTGRES_URL")
}

if(System.getenv("DOOR_POSTGRES_USER") != null) {
    ext.localProperties["door.postgresUser"] = System.getenv("DOOR_POSTGRES_USER")
}

if(System.getenv("DOOR_POSTGRES_PASS") != null) {
    ext.localProperties["door.postgresPass"] = System.getenv("DOOR_POSTGRES_PASS")
}


ext {
    version_kotlin = "1.9.0"
    version_ktor = "2.3.3"
    version_nanohttpd = "2.3.1"
    version_napier = "2.6.1"
    version_atomicfu = '0.22.0'
    version_sqlite_jdbc = "3.42.0.0"
    version_kodein_di = "7.20.2"
    version_kotlin_mockito = "5.1.0"
    version_mockwebserver = "4.11.0"
    version_android_room = "2.5.2"
    version_androidx_lifecycle = "2.6.1"
    version_androidx_paging = "3.1.1"
    version_androidx_core = '1.9.0'
    version_kotlinpoet = "1.14.2"
    version_jsqlparser = "4.6"
    version_apache_commons_text = "1.10.0"
    version_gson = "2.10.1"
    version_simple_jndi = "0.23.0"
    version_apache_commons_pool2 = "2.11.1"
    version_postgres_jdbc = "42.6.0"
    version_apache_commons_dbcp2 = "2.9.0"
    version_logback = "1.4.11"
    version_okhttp = "4.11.0"
    version_kotlinx_serialization = "1.6.0"
    version_androidx_test = "1.4.2"
    version_androidx_test_orchestrator = "1.4.2"
    version_androidx_test_runner = "1.5.2"
    version_androidx_test_rules = "1.5.0"
    version_androidx_test_junit_ext = "1.1.5"
    version_espresso = "3.5.1"


    version_kotlinx_metadata = "0.4.2"
    version_hikaricp = "5.0.1"
    version_junit = "4.13.2"
    version_junit_jupiter = "5.10.0"

    version_android_compile_sdk = 33
    version_android_target_sdk = 33

    version_android_junit_runner = "1.4.0"
    version_android_appcompat = "1.6.1"
    version_android_material = "1.9.0"
    version_android_constraint_layout = "2.1.4"

    version_kotlin_wrappers_bom = "1.0.0-pre.619"

    version_kotlin_extensions = "1.0.1-pre.619"

    version_npm_sparkmd5 = "^3.0.2"

}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}


//Find stable updates only as per https://github.com/ben-manes/gradle-versions-plugin
def isNonStable = { String version ->
    def hasPreReleaseKeywords = ["BETA", "ALPHA", "RC"].any { it -> version.toUpperCase().contains(it)}
    return hasPreReleaseKeywords
}

// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
