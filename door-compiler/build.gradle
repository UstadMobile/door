plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlinx-atomicfu'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'maven-publish'
}

group rootProject.group
version rootProject.version

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

compileKotlin{
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=com.squareup.kotlinpoet.metadata.KotlinPoetMetadataPreview"
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=com.squareup.kotlinpoet.metadata.KotlinPoetMetadataPreview"
    }
}

dependencies {
    implementation project(":door-runtime")
    implementation project(':room-annotations')
    implementation libs.paging.multiplatform.common
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation libs.kotlinx.serialization.json
    implementation libs.kotlin.reflect
    implementation libs.kotlinpoet
    implementation libs.kotlinpoet.ksp
    implementation libs.kotlinpoet.metadata
    implementation libs.jsqlparser
    implementation libs.apache.commons.text
    implementation libs.gson
    implementation libs.simple.jndi
    implementation libs.apache.commons.pool2
    implementation libs.sqlite.jdbc
    implementation libs.postgres.jdbc
    implementation libs.apache.commons.dbcp2
    implementation libs.ktor.server.netty
    implementation libs.ktor.serialization.gson
    implementation libs.ktor.client.okhttp
    implementation libs.ktor.client.gson
    implementation libs.nanohttpd
    implementation libs.nanohttpd.nanolets
    implementation libs.logback.classic
    implementation libs.kodein.di
    implementation libs.kodein.di.framework.ktor.server
    implementation libs.napier.jvm
    implementation libs.ksp.api
    testImplementation libs.junit
}


publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

