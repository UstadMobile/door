[versions]

kotlin =  "1.9.23"
ksp =  "1.9.23-1.0.19"
paging-multiplatform =  "3.3.0-alpha02-0.5.1"
androidx-paging =  "3.3.0-alpha02"
coroutines =  "1.8.0"
ktor =  "2.3.9"
nanohttpd =  "2.3.1"
napier =  "2.6.1"
atomicfu =  "0.23.2"
sqlite-jdbc =  "3.42.0.0"
kodein-di =  "7.21.2"
kotlin-mockito =  "5.1.0"
mockwebserver =  "4.12.0"
android-room =  "2.6.1"
androidx-lifecycle =  "2.7.0"
androidx-core =  "1.12.0"
kotlinpoet =  "1.14.2"
jsqlparser =  "4.7"
apache-commons-text =  "1.10.0"
gson =  "2.10.1"
simple-jndi =  "0.23.0"
apache-commons-pool2 =  "2.12.0"
postgres-jdbc =  "42.6.0"
apache-commons-dbcp2 =  "2.11.0"
logback =  "1.4.13"
okhttp =  "4.12.0"
kotlinx-serialization =  "1.6.1"
kotlinx-metadata =  "0.6.0"
hikaricp =  "5.1.0"
junit =  "4.13.2"
junit-jupiter =  "5.10.1"
turbine =  "1.0.0"

androidx-test =  "1.4.2"
androidx-test-orchestrator =  "1.4.2"
androidx-test-runner =  "1.5.2"
androidx-test-rules =  "1.5.0"
androidx-test-junit-ext =  "1.1.5"
espresso =  "3.5.1"
android-junit-runner =  "1.4.0"
android-appcompat =  "1.6.1"
android-material =  "1.11.0"
android-constraint-layout =  "2.1.4"
android-roboelectric =  "4.11.1"
kotlin-wrappers-kotlin-extensions = "1.0.1-pre.721"

[plugins]

# kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

[libraries]

paging-multiplatform-common = { module = "app.cash.paging:paging-common", version.ref = "paging-multiplatform"}
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization"}
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin"}
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet"}
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet"}
kotlinpoet-metadata = { module = "com.squareup:kotlinpoet-metadata", version.ref = "kotlinpoet"}
jsqlparser = { module = "com.github.jsqlparser:jsqlparser", version.ref = "jsqlparser"}
apache-commons-text = { module = "org.apache.commons:commons-text", version.ref = "apache-commons-text"}
gson = { module = "com.google.code.gson:gson", version.ref = "gson"}
simple-jndi = { module = "com.github.h-thurow:simple-jndi", version.ref = "simple-jndi"}
apache-commons-pool2 = { module = "org.apache.commons:commons-pool2", version.ref = "apache-commons-pool2"}
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite-jdbc"}
postgres-jdbc = { module = "org.postgresql:postgresql", version.ref = "postgres-jdbc"}
apache-commons-dbcp2 = { module = "org.apache.commons:commons-dbcp2", version.ref = "apache-commons-dbcp2"}

ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor"}
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor"}
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu"}
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor"}
ktor-client-gson = { module = "io.ktor:ktor-client-gson", version.ref = "ktor"}
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor"}
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor"}
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor"}
ktor-server = { module = "io.ktor:ktor-server", version.ref = "ktor"}
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor"}
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"}
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor"}
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor"}
ktor-io = { module = "io.ktor:ktor-io", version.ref = "ktor"}
ktor-server-servlet = { module = "io.ktor:ktor-server-servlet", version.ref = "ktor"}
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor"}
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor"}
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor"}

nanohttpd = { module = "org.nanohttpd:nanohttpd", version.ref = "nanohttpd"}
nanohttpd-nanolets = { module = "org.nanohttpd:nanohttpd-nanolets", version.ref = "nanohttpd"}
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback"}
kodein-di = { module = "org.kodein.di:kodein-di", version.ref = "kodein-di"}
kodein-di-framework-ktor-server = { module = "org.kodein.di:kodein-di-framework-ktor-server-jvm", version.ref = "kodein-di"}
napier-jvm = { module = "io.github.aakira:napier-jvm", version.ref = "napier"}
napier = { module = "io.github.aakira:napier", version.ref = "napier"}
kotlinx-metadata-jvm = { module = "org.jetbrains.kotlinx:kotlinx-metadata-jvm", version.ref = "kotlinx-metadata"}
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp"}
junit = { module = "junit:junit", version.ref = "junit"}
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp"}
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "kotlin-mockito"}
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver"}
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine"}
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines"}
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines"}
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter"}
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter"}


okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp"}
okhttp-sse = { module = "com.squareup.okhttp3:okhttp-sse", version.ref = "okhttp"}

androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "android-room"}
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "android-room"}
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "android-room"}
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "android-room"}
androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "androidx-paging"}
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core"}
robolectric = { module = "org.robolectric:robolectric", version.ref = "android-roboelectric"}
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-junit-ext"}
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner"}
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-rules"}
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "android-appcompat"}
android-material = { module = "com.google.android.material:material", version.ref = "android-material"}
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "android-constraint-layout"}
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle"}
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle"}
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle"}
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-test-orchestrator"}
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso"}


kotlin-wrappers-kotlin-extensions = { module = "org.jetbrains.kotlin-wrappers:kotlin-extensions", version.ref = "kotlin-wrappers-kotlin-extensions"}


