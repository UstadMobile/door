import java.time.Duration

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id "com.google.devtools.ksp"
}

group rootProject.group
version rootProject.version


android {
    compileSdkVersion rootProject.ext.version_android_compile_sdk
    sourceSets.main.manifest.srcFile('src/androidMain/AndroidManifest.xml')
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.version_android_target_sdk
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
}

kotlin {

    android {

    }

    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        testRuns["test"].executionTask.configure {
            useJUnit()
        }
    }

    js(LEGACY) {
        browser {
            testTask {
                useKarma {
                    timeout = Duration.ofSeconds(30)
                    useChromeHeadless() //change to useChrome to run the actual browser
                }
            }
        }
    }

    sourceSets {
        commonMain {
            kotlin.srcDir("build/generated/ksp/metadata/commonMain/kotlin")
            
            dependencies {
                implementation kotlin('stdlib-common')
                implementation project(":door-runtime")
                compileOnly project(":door-annotations")

                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$version_kotlinx_serialization"
                implementation "io.ktor:ktor-client-content-negotiation:$version_ktor"
                implementation "io.ktor:ktor-client-core:$version_ktor"
                implementation "io.ktor:ktor-client-json:$version_ktor"
                implementation "io.github.aakira:napier:$version_napier"
                implementation "org.kodein.di:kodein-di:$version_kodein_di"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jvmMain {
            dependencies {
                implementation "io.ktor:ktor-serialization-gson:$version_ktor"
                implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$version_kodein_di"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "io.ktor:ktor-server-content-negotiation:$version_ktor"
                implementation "io.ktor:ktor-server-core:$version_ktor"
                implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"
            }
        }

        jvmTest {
            dependencies {
                implementation kotlin('test-junit')
                implementation "io.ktor:ktor-server-netty:$version_ktor"
                implementation "com.squareup.okhttp3:mockwebserver:$version_mockwebserver"
                implementation "org.mockito.kotlin:mockito-kotlin:$version_kotlin_mockito"
                implementation "io.ktor:ktor-client-okhttp:$version_ktor"
                implementation "io.ktor:ktor-client-gson:$version_ktor"
                implementation "io.ktor:ktor-serialization-kotlinx-json:$version_ktor"
                implementation "com.github.h-thurow:simple-jndi:$version_simple_jndi"
                implementation "org.apache.commons:commons-pool2:$version_apache_commons_pool2"
                implementation "org.apache.commons:commons-dbcp2:$version_apache_commons_dbcp2"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "org.postgresql:postgresql:$version_postgres_jdbc"
            }
        }

        jsMain {
            dependencies {

            }
        }

        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }

        androidMain {
            dependencies {
                implementation "androidx.room:room-runtime:$version_android_room"
                implementation "androidx.room:room-ktx:$version_android_room"
                implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_androidx_lifecycle"
                implementation "androidx.paging:paging-runtime:$version_androidx_paging"
                implementation "androidx.core:core-ktx:$version_androidx_core"
                implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
                implementation "com.squareup.okhttp3:okhttp-sse:$version_okhttp"
                implementation "com.google.code.gson:gson:$version_gson"
                implementation "org.nanohttpd:nanohttpd:$version_nanohttpd"
                implementation "org.nanohttpd:nanohttpd-nanolets:$version_nanohttpd"
            }
        }
    }
}

ksp {
    arg("doordb_migrations_out", project.file("$buildDir/generated/door-migrations").absolutePath)
    arg("doordb_postgres_url", rootProject.ext.localProperties["door.postgresUrl"])
    arg("doordb_postgres_user", rootProject.ext.localProperties["door.postgresUser"])
    arg("doordb_postgres_password", rootProject.ext.localProperties["door.postgresPass"])
}

dependencies {
    kspJvm project(":door-compiler")
    kspJs project(":door-compiler")
    kspCommonMainMetadata project(":door-shallowcopy")
    kspAndroid project(":door-compiler")
    kspAndroid "androidx.room:room-compiler:$version_android_room"
}
