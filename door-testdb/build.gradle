import java.time.Duration

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id "com.google.devtools.ksp"
}

group rootProject.group
version rootProject.version

repositories {
    mavenCentral()
    mavenLocal()
}


kotlin {
    /* Targets configuration omitted. 
    *  To find out how to configure the targets, please follow the link:
    *  https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#setting-up-targets */

    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        testRuns["test"].executionTask.configure {
            useJUnit()
        }
    }

    js(LEGACY) {
        browser {
            testTask {
                useKarma {
                    timeout = Duration.ofSeconds(30)
                    useChromeHeadless() //change to useChrome to run the actual browser
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation project(":door-runtime")
                compileOnly project(":door-room-kmp")
                implementation project(":door-jdbc")
                implementation project(":door-common")

                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$version_kotlinx_serialization"
                implementation "io.ktor:ktor-client-content-negotiation:$version_ktor"
                implementation "io.ktor:ktor-client-core:$version_ktor"
                implementation "io.ktor:ktor-client-json:$version_ktor"
                implementation "io.github.aakira:napier:$version_napier"
                implementation "org.kodein.di:kodein-di:$version_kodein_di"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jvmMain {
            dependencies {
                implementation project(":door-room-kmp")
                implementation "io.ktor:ktor-serialization-gson:$version_ktor"
                implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$version_kodein_di"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "io.ktor:ktor-server-content-negotiation:$version_ktor"
                implementation "io.ktor:ktor-server-core:$version_ktor"
                implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"
            }
        }

        jvmTest {
            dependencies {
                implementation kotlin('test-junit')
                implementation "io.ktor:ktor-server-netty:$version_ktor"
                implementation "com.squareup.okhttp3:mockwebserver:$version_mockwebserver"
                implementation "org.mockito.kotlin:mockito-kotlin:$version_kotlin_mockito"
                implementation "io.ktor:ktor-client-okhttp:$version_ktor"
                implementation "io.ktor:ktor-client-gson:$version_ktor"
                implementation "com.github.h-thurow:simple-jndi:$version_simple_jndi"
                implementation "org.apache.commons:commons-pool2:$version_apache_commons_pool2"
                implementation "org.apache.commons:commons-dbcp2:$version_apache_commons_dbcp2"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "org.postgresql:postgresql:$version_postgres_jdbc"
            }
        }

        jsMain {
            dependencies {
                implementation project(":door-room-kmp")
            }
        }

        jsTest {
            kotlin.srcDir("$buildDir/generated/source/door-js")
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

ksp {
    arg("doordb_android_out", project.file("../test-app-android/build/generated/source/door-test-db").absolutePath)
    //Uncomment lines below to allow debugging on generated source code.
    arg("doordb_source_path", project.file("src/commonMain/kotlin").absolutePath)
    arg("doordb_migrations_out", project.file("$buildDir/generated/door-migrations").absolutePath)
    arg("doordb_postgres_url", rootProject.ext.localProperties["door.postgresUrl"])
    arg("doordb_postgres_user", rootProject.ext.localProperties["door.postgresUser"])
    arg("doordb_postgres_password", rootProject.ext.localProperties["door.postgresPass"])
}

dependencies {
    kspJvm project(":door-compiler")
    kspJs project(":door-compiler")
}
